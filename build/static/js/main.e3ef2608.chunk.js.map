{"version":3,"sources":["index.js"],"names":["Todo","props","handleSubmit","e","preventDefault","state","input","_list","list","push","id","length","content","finish","setState","document","querySelector","value","handleChange","target","textContent","handleCheckbox","handleDelete","splice","JSON","parse","localStorage","getItem","bind","this","setItem","stringify","type","onChange","onClick","map","cur","idx","checked","contentEditable","suppressContentEditableWarning","className","onBlur","React","Component","ReactDOM","render","getElementById"],"mappings":"wNAKMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,aAAe,SAACC,GAEd,GADAA,EAAEC,iBACuB,KAArB,EAAKC,MAAMC,MAAc,CAC3B,IAAIC,EAAQ,EAAKF,MAAMG,KACvBD,EAAME,KAAK,CAAEC,GAAIH,EAAMI,OAAQC,QAAS,EAAKP,MAAMC,MAAOO,QAAQ,IAClE,EAAKC,SAAS,CAAEN,KAAMD,EAAOD,MAAO,KACpCS,SAASC,cAAc,UAAUC,MAAQ,KAhB1B,EAmBnBC,aAAe,SAACf,GACd,GAAoB,UAAhBA,EAAEgB,OAAOT,GACX,EAAKI,SAAS,CAAER,MAAOH,EAAEgB,OAAOF,YAC3B,CACL,IAAIV,EAAQ,EAAKF,MAAMG,KACvBD,EAAMJ,EAAEgB,OAAOT,IAAIE,QAAUT,EAAEgB,OAAOC,YACtC,EAAKN,SAAS,CAAEN,KAAMD,MAzBP,EA4BnBc,eAAiB,SAAClB,GAChB,IAAII,EAAQ,EAAKF,MAAMG,KACvBD,EAAMJ,EAAEgB,OAAOT,IAAIG,QAAUN,EAAMJ,EAAEgB,OAAOT,IAAIG,OAChD,EAAKC,SAAS,CAAEN,KAAMD,KA/BL,EAiCnBe,aAAe,SAACnB,GACd,IAAII,EAAQ,EAAKF,MAAMG,KACvBD,EAAMgB,OAAOpB,EAAEgB,OAAOT,GAAI,GAC1B,EAAKI,SAAS,CAAEN,KAAMD,KAhCtB,EAAKF,MAAQmB,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,CAAEnB,KAAM,GAAIF,MAAO,IAChF,EAAKJ,aAAe,EAAKA,aAAa0B,KAAlB,gBACpB,EAAKV,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAKP,eAAiB,EAAKA,eAAeO,KAApB,gBACtB,EAAKN,aAAe,EAAKA,aAAaM,KAAlB,gBARH,E,0CAsCnB,WAAU,IAAD,OACHpB,EAAOqB,KAAKxB,MAAMG,KAEtB,OADAkB,aAAaI,QAAQ,WAAYN,KAAKO,UAAUF,KAAKxB,QAEnD,gCACE,2CACA,iCACE,uBAAO2B,KAAK,OAAOtB,GAAG,QAAQuB,SAAUJ,KAAKX,eAC7C,wBAAQgB,QAASL,KAAK3B,aAAtB,uBAEF,6BACGM,EAAKG,OAAS,EAAIH,EAAK2B,KAAI,SAACC,EAAKC,GAEhC,OADAD,EAAI1B,GAAK2B,EACD,+BACN,uBAAOL,KAAK,WAAWM,QAASF,EAAIvB,OAAQoB,SAAU,EAAKZ,eAAgBX,GAAI0B,EAAI1B,KACnF,sBAAM6B,iBAAiB,EAAMC,gCAAgC,EAAM9B,GAAI0B,EAAI1B,GAAI+B,UAAWL,EAAIvB,OAAS,WAAa,YAAa6B,OAAQ,EAAKxB,aAA9I,SAA8JkB,EAAIxB,UAClK,wBAAQsB,QAAS,EAAKZ,aAAcZ,GAAI0B,EAAI1B,GAA5C,sBAHe2B,MAKd,mE,GAzDIM,IAAMC,WAgEzBC,IAASC,OACP,cAAC9C,EAAD,IACAe,SAASgC,eAAe,W","file":"static/js/main.e3ef2608.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.list = [{ id: 1, content: \"2333\", finish: true }, { id: 2, content: \"3333\", finish: false }, { id: 3, content: \"4333\", finish: true }];\n    //this.state={list:[{ id: 1, content: \"2333\", finish: true }, { id: 2, content: \"3333\", finish: false }, { id: 3, content: \"4333\", finish: true }],input:\"\"};\n    this.state = JSON.parse(localStorage.getItem('todolist')) || { list: [], input: \"\" };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.input !== \"\") {\n      let _list = this.state.list;\n      _list.push({ id: _list.length, content: this.state.input, finish: false });\n      this.setState({ list: _list, input: \"\" });\n      document.querySelector('#input').value = \"\";\n    }\n  }\n  handleChange = (e) => {\n    if (e.target.id === \"input\") {\n      this.setState({ input: e.target.value });\n    } else {\n      let _list = this.state.list;\n      _list[e.target.id].content = e.target.textContent;\n      this.setState({ list: _list });\n    }\n  }\n  handleCheckbox = (e) => {\n    let _list = this.state.list;\n    _list[e.target.id].finish = !_list[e.target.id].finish;\n    this.setState({ list: _list });\n  }\n  handleDelete = (e) => {\n    let _list = this.state.list;\n    _list.splice(e.target.id, 1);\n    this.setState({ list: _list });\n  }\n  render() {\n    let list = this.state.list;\n    localStorage.setItem('todolist', JSON.stringify(this.state));\n    return (\n      <div>\n        <h1>TodoLists</h1>\n        <form>\n          <input type=\"text\" id=\"input\" onChange={this.handleChange}></input>\n          <button onClick={this.handleSubmit}>submit</button>\n        </form>\n        <ul>\n          {list.length > 0 ? list.map((cur, idx) => {\n            cur.id = idx;\n            return (<li key={idx}>\n              <input type=\"checkbox\" checked={cur.finish} onChange={this.handleCheckbox} id={cur.id}></input>\n              <span contentEditable={true} suppressContentEditableWarning={true} id={cur.id} className={cur.finish ? \"isfinish\" : \"notfinish\"} onBlur={this.handleChange} >{cur.content}</span>\n              <button onClick={this.handleDelete} id={cur.id}>delete</button>\n            </li>)\n          }) : <p>click submit tos add Todo</p>}\n        </ul>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Todo />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}